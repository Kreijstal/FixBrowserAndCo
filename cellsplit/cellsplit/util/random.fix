/*
 * CellSplit v0.2 - https://www.cellsplit.org/
 * Copyright (c) 2021-2024 Martin Dvorak <jezek2@advel.cz>
 *
 * This software is provided 'as-is', without any express or implied warranty.
 * In no event will the authors be held liable for any damages arising from
 * the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose, 
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 */

use "classes";

const @MUL_LO = 0x4c957f2d;
const @MUL_HI = 0x5851f42d;
const @ADD_LO = 0xf767814f;
const @ADD_HI = 0x14057b7e;

class Random
{
	var @lo: Integer;
	var @hi: Integer;

	constructor create(lo: Integer, hi: Integer)
	{
		this.lo = lo ^ MUL_LO;
		this.hi = hi ^ MUL_HI;
	}

	function next(): Integer
	{
		var lo, hi;
		(lo, hi) = mul64(this.lo, this.hi, MUL_LO, MUL_HI);
		(lo, hi) = add64(lo, hi, ADD_LO, ADD_HI);
		this.lo = lo;
		this.hi = hi;
		return hi;
	}

	function next(max: Integer): Integer
	{
		return (next() >>> 1) % max;
	}

	function next_float(): Float
	{
		return float(next() >>> 9) / 8388607.0;
	}
}
