/*
 * CellSplit v0.2 - https://www.cellsplit.org/
 * Copyright (c) 2021-2024 Martin Dvorak <jezek2@advel.cz>
 *
 * This software is provided 'as-is', without any express or implied warranty.
 * In no event will the authors be held liable for any damages arising from
 * the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose, 
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 */

use "unpack";
use "classes";

import "image/image";
import "task/task";

function @render([tex_width: Integer, tex_height: Integer, shape: Shape, outline: Float, outline_color: Integer, scale: Float, center_x: Float, center_y: Float])
{
	var images: Image[] = [];

	var inverse = false;
	if (outline < 0.0) {
		outline = -outline;
		inverse = true;
	}

	var outline_shape: Shape = null;
	if (outline > 0.0) {
		outline_shape = shape.get_outline(outline);
	}

	for (;;) {
		var img = Image::create(tex_width, tex_height);
		var p = Painter::create(img);
		p.scale(scale, scale);
		p.translate(center_x, center_y);
		if (outline_shape) {
			p.fill_shape(outline_shape, inverse? 0xFFFFFFFF : outline_color);
		}
		p.fill_shape(shape, inverse? outline_color : 0xFFFFFFFF);
		images[] = img;
		if (tex_width == 1 && tex_height == 1) break;
		tex_width = max(1, tex_width / 2);
		tex_height = max(1, tex_height / 2);
		scale *= 0.5;
	}

	return images;
}

function main()
{
	for (;;) {
		var msg = Task::receive();
		Task::send(render(msg));
		heap_collect();
	}
}
