/*
 * CellSplit v0.2 - https://www.cellsplit.org/
 * Copyright (c) 2021-2024 Martin Dvorak <jezek2@advel.cz>
 *
 * This software is provided 'as-is', without any express or implied warranty.
 * In no event will the authors be held liable for any damages arising from
 * the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose, 
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 */

use "classes";

import "task/task";
import "task/channel";
import "io/file";
import "util/json";
import "cellsplit/util/config";
import "cellsplit/util/websocket_proxy";

function main(): Integer
{
	var control_channel = Channel::create(0);

	var exit_on_restart = false;

	var path = Path(get_config_file("server.json"));
	if (path.exists()) {
		var (config, e) = JSON::parse(File::read_whole(path));
		if (e) {
			log("Error in server configuration file: "+e[0]);
			return 1;
		}
		var port = config.get("port", 12345).as_int();
		var websocket_port = config.get("websocket_port", port+1).as_int();
		if (websocket_port != 0) {
			WebSocketProxy::create(websocket_port, "localhost", port);
		}
		exit_on_restart = config.get("exit_on_restart", JSONBoolean::get(false)).as_boolean();
	}

	for (;;) {
		Task::create("cellsplit/server/server", "run#1", [control_channel]);

		var restart = control_channel.receive() as Boolean;
		if (!restart) {
			break;
		}
		log("restarting...");
		if (exit_on_restart) {
			break;
		}
		Task::sleep(1000);
	}
	return 0;
}
